services:
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: calculator
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sre_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d calculator"]
      interval: 5s
      timeout: 5s
      retries: 5

  auth_service:
    build: ./auth_service
    ports:
      - "5002:5002"
    networks:
      - sre_network

  calc_service:
    build: ./calc_service
    ports:
      - "5001:5001"
    environment:
      - AUTH_URL=http://auth_service:5002/login
      - HISTORY_URL=http://history_service:5003/history
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sre_network

  history_service:
    build: ./history_service
    ports:
      - "5003:5003"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=calculator
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sre_network

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend/public:/usr/share/nginx/html
    environment:
      - NODE_ENV=production
    depends_on:
      - calc_service
      - auth_service
      - history_service
    networks:
      - sre_network

  nginx:
    image: nginx:1.23-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/public:/usr/share/nginx/html 
      - /etc/letsencrypt/live/coobe.ru/:/etc/letsencrypt/live/coobe.ru/
      - /etc/letsencrypt/archive/coobe.ru/:/etc/letsencrypt/archive/coobe.ru/
      - ./certbot/conf/options-ssl-nginx.conf:/etc/letsencrypt/options-ssl-nginx.conf
      - ./certbot/conf/ssl-dhparams.pem:/etc/letsencrypt/ssl-dhparams.pem
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - calc_service
      - auth_service
      - history_service
    networks:
      - sre_network

networks:
  sre_network:
    driver: bridge

volumes:
  postgres_data: