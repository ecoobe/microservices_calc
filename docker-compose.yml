services:
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: calculator
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sre_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d calculator"]
      interval: 5s
      timeout: 5s
      retries: 5

  auth_service:
    build: ./auth_service
    ports:
      - "5002:5002"
    networks:
      - sre_network

  calc_service:
    build: ./calc_service
    ports:
      - "5001:5001"
    environment:
      - AUTH_URL=http://auth_service:5002/login
      - HISTORY_URL=http://history_service:5003/history
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sre_network

  history_service:
    build: ./history_service
    ports:
      - "5003:5003"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=calculator
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sre_network

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend/public:/usr/share/nginx/html
    environment:
      - NODE_ENV=production
    depends_on:
      - calc_service
      - auth_service
      - history_service
    networks:
      - sre_network

  nginx:
    image: nginx:1.23-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/public:/usr/share/nginx/html
      # Основной домен
      - /etc/letsencrypt/live/coobe.ru/:/etc/letsencrypt/live/coobe.ru/
      - /etc/letsencrypt/archive/coobe.ru/:/etc/letsencrypt/archive/coobe.ru/
      # Поддомены (используем тот же сертификат)
      - /etc/letsencrypt/live/grafana.coobe.ru/:/etc/letsencrypt/live/grafana.coobe.ru/
      - /etc/letsencrypt/archive/grafana.coobe.ru/:/etc/letsencrypt/archive/grafana.coobe.ru/
      # Общие SSL-настройки
      - ./certbot/conf/options-ssl-nginx.conf:/etc/letsencrypt/options-ssl-nginx.conf
      - ./certbot/conf/ssl-dhparams.pem:/etc/letsencrypt/ssl-dhparams.pem
      # Конфиг Nginx
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - calc_service
      - auth_service
      - history_service
    networks:
      - sre_network
     # Prometheus для сбора метрик
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - sre_network
    depends_on:
      - node-exporter

  # Node Exporter для метрик хоста
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - sre_network
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro

  victoriametrics:
    image: victoriametrics/victoria-metrics:latest
    container_name: victoriametrics
    command:
      - --httpListenAddr=:8428
      - --promscrape.config=/etc/victoriametrics/prometheus.yml
      # - --httpAuth.username=${VM_USER}
      # - --httpAuth.password=${VM_PASSWORD}
      - --memory.allowedPercent=50
      - --retentionPeriod=6
    volumes:
      - victoriametrics_data:/var/lib/victoriametrics/data
      - ./prometheus/prometheus.yml:/etc/victoriametrics/prometheus.yml
    networks:
      - sre_network
    env_file: .env
    ports:
      - "8428:8428"
    depends_on:
      - node-exporter

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml  # Конфиг алертов
    networks:
      - sre_network
    depends_on:
      - victoriametrics

  grafana:
    image: grafana/grafana-enterprise:latest
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    user: "472"
    ports:
      - "3001:3000"
    networks:
      - sre_network
    depends_on:
      - victoriametrics
      - alertmanager

volumes:
  grafana_data:  # Добавлен том для Grafana
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/grafana_data

  victoriametrics_data:  # Добавлен том для VictoriaMetrics
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/victoriametrics-data

  postgres_data:

networks:
  sre_network:
    driver: bridge
